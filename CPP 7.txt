What is a Stream? Enlist various Stream Classes:
stream is a sequence of characters that represent a source or destination of data.
Streams are used for input (reading data into a program) and output (writing data from a program).
streams Classes :-
istream: Input stream class for reading from input devices.
ostream: Output stream class for writing to output devices.
ifstream: Input file stream class for reading from files.
ofstream: Output file stream class for writing to files.
stringstream: String stream class for reading and writing
to strings.


Operators used by unformatted I/O:
Insertion Operator (<<):
Used for outputting data to the console or a file.
Example: cout << "Hello, World!";
Extraction Operator (>>):
Used for inputting data from the console or a file.
Example: cin >> number;


Various unformatted I/O operations:
Various unformatted I/O operations in C++ include:
• put(): Writes a single character to the output stream.
• get(): Reads a single character from the input stream.
• write(): Writes a block of data to the output stream.
• read(): Reads a block of data from the input stream


Explain any four formatted input/output functions.
1.setw 2.setprecision 3.fill 4.right or left 5.fixed.

Describe file manipulators with their syntaxes
1. ios::app - Append Mode:
1.Opens a file for output at the end, allowing new data to be appended without overwriting existing content.
	Syntax: ios::app
	ex.ofstream outputFile;
	outputFile.open("data.txt", ios::app);

2.ios::ate - Set Initial Position to End:
1.Sets the initial file position to the end when opening a file for input or output, allowing direct access to the end of the file.
	Syntax: ios::ate
	ex.fstream fileStream;
	fileStream.open("data.txt", ios::ate);

3.ios::in - Input Mode:
1.Opens a file for input operations, allowing reading data from the file.
	Syntax: ios::in
	ex.ifstream inputFile;
	inputFile.open("data.txt", ios::in);

4.ios::out - Output Mode:
1.Opens a file for output operations, allowing writing data to the file.
	Syntax: ios::out
	ofstream outputFile;
	outputFile.open("data.txt", ios::out);

5.ios::binary - Binary Mode:
1.Opens a file in binary mode, suitable for reading and writing binary data (e.g., images, executable files).
	Syntax: ios::binary
	ex.fstream binaryFile;
	binaryFile.open("data.bin", ios::binary | ios::in | ios::out);
